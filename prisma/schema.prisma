datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Episode {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author User @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  authorId String

  description String
  duration Int
  episode Int
  filepath String
  filesize Int
  filetype String @default("audio/mpeg")
  publishDate DateTime
  season Int
  shownotes String
  title String
}

model User {
  id    String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  discordId String @unique
  discordName String
  discordAvatar String
  discordRoles String[]

  sleeperOwnerID String @default("")

  registrations Registration[]
  episodes Episode[]
}

model Registration {
  id String @id @default(cuid())
  year Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model League {
  id String @id @default(cuid())
  year Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String
  sleeperLeagueId String @unique
  sleeperDraftId String @unique
  tier Int

  isActive Boolean
}